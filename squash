#!/usr/bin/env bash
#
# Unix theme manager
#
# Designed by Joshua Ervin @ University of Washington
# jlevin@posteo.net
# github.com/JLErvin

# COLORSCHEME 
COLOR_SCHEME="$1"

# GLOBAL VARIABLES
CACHE_DIR="$HOME/.cache/squash"
THEME_DIR="$HOME/.config/squash"
VIM_CONFIG="$HOME/.config/nvim/appearance.vim"
WM=$(head -n 1 $CACHE_DIR/wm)

# CONVENIENCE VARIABLES
NEWLINE=$'\n'
sequence=""

# Removes old color files from the cache
# directory used to define xrdb
cleanup() { 
   rm -f $CACHE_DIR/x_colors
}

# Sends the current color escape sequences to 
# all active terminals, causing them to 
# change active colors without having to be
# reloaded
reload_x() { 
   for term in /dev/pts/[0-9]*; do
      printf "%b" "$sequence" > "$term"
   done
}

# Reloads the current X resources file
# in the home direcotry
merge_x() { 
   xrdb ${HOME}/.Xresources
}

reload_lemonbar() { 
    killall lemonbar
    #infobar &
    ${BAR_SCRIPT} &
}

# Credit for this method goes to dkeg
# github.com/dkeg
# Changes the colors within 2bwm's config.h file
# to reflect the new colorscheme, then recompiles and
# reloads 2bwm
# NOTE: Requires sudo
reload_2bwm() { 
   foc=${TWOBWM_FOCUS}
   unfoc=${TWOBWM_UNFOCUS}
   fixc=${TWOBWM_FIXED}
   unkil=${TWOBWM_UNKILL}
   fixunk=${TWOBWM_FIXEDUNK}
   outr=${TWOBWM_OUTR}
   emp=${TWOBWM_EMP}

   dir=$HOME/2bwm/src/2bwm
   file=$dir/config.h

   #printf "${NEWLINE}"
   #printf "${dir}${NEWLINE}"
   #printf "${file}${NEWLINE}"

   wmcol=$(cat $file|awk '/\*colors/ {print $6}'|cut -d '}' -f1|awk '{gsub(/"/," ");print $2,$4,$6,$8,$10,$12,$14}') 
   arr=($wmcol)

    sed -i "s/${arr[0]}/"$foc"/;
            s/${arr[1]}/"$unfoc"/;
            s/${arr[2]}/"$fixc"/;
            s/${arr[3]}/"$unkil"/;
            s/${arr[4]}/"$fixunk"/;
            s/${arr[5]}/"$outr"/;
            s/${arr[6]}/"$emp"/" $file 

   cd $dir && make && sudo make install && cd

   xdotool key "super+ctrl+r"
}

# Credit to tudor for this awesome method
# REQUIRES: nvim remote to work
reload_nvim() {
    inst=($(nvr --serverlist | sort | uniq))

    for nvim_inst in "${inst[@]}"; do
        nvr --servername "$nvim_inst" --remote-send '<Esc>:so $HOME/.config/nvim/init.vim<CR>' &
    done
}

# Sets the current wallpaper using hsetroot. 
# Overwrites any current wallpaper set by either
# xsetroot or nitrogen
set_wallpaper() { 
    if [[ $WALLPAPER_STYLE == "tile" ]]; then
        hsetroot -tile ${WALLPAPER_PATH}
    else
        hsetroot -fill ${WALLPAPER_PATH}
    fi
    cp ${WALLPAPER_PATH} "/tmp/screen.png"
}

# builds an array of all necessary colors
# the last three elements of the array are
# the bg, fg, and cursor color
get_colors() { 
   #. $THEME_DIR/$COLOR_SCHEME
   source $THEME_DIR/$COLOR_SCHEME
   COLOR_ARRAY=($BLK $RED $GRN $YLW $BLU $MAG $CYN $WHT \
                $BBLK $BRED $BGRN $BYLW $BBLU $BMAG $BCYN $BWHT)
}
# adds main colors to sequence 0-15. Colors are defined in the 
# COLOR_ARRAY
create_main_sequence() { 
   for i in {0..15}; do
      sequence+="\033]4;${i};${COLOR_ARRAY[${i}]}\007"
   done
}

# adds background and foreground colors to sequence
# does not rely on array, uses sourced variables
create_secondary_sequence() { 
   # add foreground
   for i in 10 12 13; do
      sequence+="\033]${i};${FG}\007"
   done

   # add background
   for i in 11 14 708; do
      sequence+="\033]${i};${BG}\007"
   done
}

write_x_source() { 
   x_output=""
   x_output+="*.foreground:   ${FG}${NEWLINE}"
   x_output+="*.background:   ${BG}${NEWLINE}"
   x_output+="*.cursorColor:  ${FG}${NEWLINE}"

   for i in {0..15}; do
      x_output+="*.color${i}: ${COLOR_ARRAY[${i}]}${NEWLINE}"
   done
}

write_rofi() { 
   rofi_output=""
   rofi_output+="rofi.color-enaled: true${NEWLINE}"
   rofi_output+="rofi.color-window: ${BG}, ${BG}, ${BLK}${NEWLINE}"
   rofi_output+="rofi.color-normal: ${BG}, ${FG}, ${BG}, ${BLK}, ${ACC}${NEWLINE}"
}

write_2bwm() { 
   twobwm_output=""
   twobwm_output+="twobwm.focus_color: ${TWOBWM_FOCUS}${NEWLINE}"
   twobwm_output+="twobwm.unfocus_color: ${TWOBWM_FOCUS}${NEWLINE}"
   twobwm_output+="twobwm.fixed_color: ${TWOBWM_FIXED}${NEWLINE}"
   twobwm_output+="twobwm.unkill_color: ${TWOBWM_UNKILL}${NEWLINE}"
   twobwm_output+="twobwm.outer_border_color: ${TWOBWM_OUTR}${NEWLINE}"
   twobwm_output+="twobwm.fixed_unkill_color: ${TWOBWM_UNKILL}${NEWLINE}"
}

# Writes CSS colors for use with programs such as firefox to 
# $CACHE_DIR/colors.css
write_css() { 
   css_output=""
   css_output+=":root {${NEWLINE}"
   css_output+="\t--wallpaper: url("${wallpaper}");${NEWLINE}"
   css_output+="\t--background: ${BG};${NEWLINE}"
   css_output+="\t--foreground: ${FG};${NEWLINE}"
   for i in {0..15}; do
      css_output+="\t--color${i}: ${COLOR_ARRAY[${i}]};${NEWLINE}"
   done
   css_output+="}"
   printf "${css_output}" > "${CACHE_DIR}/colors.css"
}

# Writes SH Colors for use with programs such as lemonbar
# to $CACHE_DIR/colors
write_sh() { 
   rm -f $CACHE_DIR/colors
   cp $THEME_DIR/$COLOR_SCHEME $CACHE_DIR/colors
}

# Writes X Output, Rofi output, and 2bwm output to x_colors
# in $CACHE_DIR
write_all_x() { 
   output=${x_output}${rofi_output}${twobwm_output}
   printf "${output}" > "${CACHE_DIR}/x_colors"
}

write_name() {
    printf "$COLOR_SCHEME" > "${CACHE_DIR}/name"
}

write_vim_colorscheme() {
    sed -i -e "s/colorscheme .*/colorscheme $VIM_SCHEME/g" $VIM_CONFIG
}

if [ -f $THEME_DIR/$COLOR_SCHEME ]; then
    printf "Changing colorschemes..."

    # Remove old colors
    cleanup

    # Source color directory
    get_colors

    # Create sequence to reload opened terminals
    create_main_sequence
    create_secondary_sequence

    # Reload all x terminals
    reload_x

    # Write all colors files to .cahe
    write_x_source
    write_rofi
    write_2bwm
    write_all_x
    write_css
    write_sh
    #write_x_define
    write_name
    write_vim_colorscheme

    # Merge x colors
    merge_x

    reload_lemonbar
    reload_nvim

    # Set wallpaper
    set_wallpaper

    # Recompile and reload 2bwm
    # Reload bar
    if [[ $WM == "2bwm" ]]; then
        reload_2bwm
    fi
else
    printf "ERROR: THEME FILE NOT FOUND"
fi
