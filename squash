#!/usr/bin/env bash

COLOR_SCHEME="${1}"

usage() {
    printf "Usage: pepper <THEME_NAME>"
    exit 1
}

test -z "${1}" && usage

squash_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
NEWLINE=$'\n'

# Source necessary squash files
source "${squash_dir}/defaults"
source "${THEME_DIR}/${COLOR_SCHEME}"

color_array=($BLK $RED $GRN $YLW $BLU $MAG $CYN $WHT \
                   $BBLK $BRED $BGRN $BYLW $BBLU $BMAG $BCYN $BWHT)

# Uses the sourced color array to create a sequence
# of escape codes for x terminals, and update their
# colors without restarting them
# @DEPENDS reload_terminals
update_terminals() 
{
    local sequence=""

    for i in {0..15}; do
      sequence+="\033]4;${i};${color_array[${i}]}\007"
    done

    for i in 10 12 13; do
      sequence+="\033]${i};${FG}\007"
    done

    for i in 11 14 708; do
      sequence+="\033]${i};${BG}\007"
    done

    reload_terminals "${sequence}"
}

update_wm() {
    if [[ ! $(command -v wmctrl) ]]; then
        printf "ERROR: cmtrl not found"
        printf "wm will not be reloaded"
    else
        wm=$(wmctrl -m | grep Name | cut -d' ' -f2)
        case ${wm} in
            $"2bwm")
                reload_2bwm
            ;;
        esac
    fi
}

update_nvim() {
    if [[ -z ${VIM_SCHEME} ]]; then
        printf "VIM_SCHEME is unset, not changing vim colorscheme"
    else
        sed -i -e "s/colorscheme .*/colorscheme $VIM_SCHEME/g" $VIM_CONFIG
        reload_nvim
    fi
}

update_bar() {
    killall lemonbar
    ${BAR_SCRIPT} &
}

reload_2bwm() {
    #!/usr/bin/env bash

    # These variables are set by squash and sourced
    # when the theme is set through the squash script
    # If you want to use this script on your own, 
    # define these colors some other way
    foc=${TWOBWM_FOCUS}
    unfoc=${TWOBWM_UNFOCUS}
    fixc=${TWOBWM_FIXED}
    unkil=${TWOBWM_UNKILL}
    fixunk=${TWOBWM_FIXEDUNK}
    outr=${TWOBWM_OUTR}
    emp=${TWOBWM_EMP}

    printf "$foc"

    dir=$HOME/2bwm/src/2bwm
    file=$dir/config.h

    wmcol=$(cat $file|awk '/\*colors/ {print $6}'|cut -d '}' -f1|awk '{gsub(/"/," ");print $2,$4,$6,$8,$10,$12,$14}') 
    arr=($wmcol)

    sed -i "s/${arr[0]}/"$foc"/;
            s/${arr[1]}/"$unfoc"/;
            s/${arr[2]}/"$fixc"/;
            s/${arr[3]}/"$unkil"/;
            s/${arr[4]}/"$fixunk"/;
            s/${arr[5]}/"$outr"/;
            s/${arr[6]}/"$emp"/" $file 

    cd $dir && make && sudo make install && cd

    xdotool key "super+ctrl+r"
}

reload_nvim() {
    if [[ $(command -v nvr) ]]; then
        inst=($(nvr --serverlist | sort | uniq))

        for nvim_inst in "${inst[@]}"; do
            nvr --servername "${nvim_inst}" --remote-send '<Esc>:so ${HOME}/.config/nvim/init.vim<CR>' &
        done
    fi
}

reload_terminals() {
    seq="${1}"

    for term in /dev/pts/[0-9]*; do
        printf "%b" "${seq}" > "${term}"
    done
}

write_x()
{
   local x_output=""
   local x_output+="*.foreground:   ${FG}${NEWLINE}"
   local x_output+="*.background:   ${BG}${NEWLINE}"
   local x_output+="*.cursorColor:  ${FG}${NEWLINE}"

   for i in {0..15}; do
      local x_output+="*.color${i}: ${color_array[${i}]}${NEWLINE}"
   done

   local rofi_output=""
   local rofi_output+="rofi.color-enaled: true${NEWLINE}"
   local rofi_output+="rofi.color-window: ${BG}, ${BG}, ${BLK}${NEWLINE}"
   local rofi_output+="rofi.color-normal: ${BG}, ${FG}, ${BG}, ${BLK}, ${ACC}${NEWLINE}"

   local twobwm_output=""
   local twobwm_output+="twobwm.focus_color: ${TWOBWM_FOCUS}${NEWLINE}"
   local twobwm_output+="twobwm.unfocus_color: ${TWOBWM_FOCUS}${NEWLINE}"
   local twobwm_output+="twobwm.fixed_color: ${TWOBWM_FIXED}${NEWLINE}"
   local twobwm_output+="twobwm.unkill_color: ${TWOBWM_UNKILL}${NEWLINE}"
   local twobwm_output+="twobwm.outer_border_color: ${TWOBWM_OUTR}${NEWLINE}"
   local twobwm_output+="twobwm.fixed_unkill_color: ${TWOBWM_UNKILL}${NEWLINE}"

   local output="${x_output}${rofi_output}${twobwm_output}"
   printf "${output}" > "${CACHE_DIR}/x_colors"
}

write_css() {
   local css_output=""
   local css_output+=":root {${NEWLINE}"
   local css_output+="\t--wallpaper: url("${wallpaper}");${NEWLINE}"
   local css_output+="\t--background: ${BG};${NEWLINE}"
   local css_output+="\t--foreground: ${FG};${NEWLINE}"
   for i in {0..15}; do
      local css_output+="\t--color${i}: ${color_array[${i}]};${NEWLINE}"
   done
   local css_output+="}"

   printf "${css_output}" > "${CACHE_DIR}/colors.css"
}

write_sh() {
    rm -f ${CACHE_DIR}/colors
    cp ${THEME_DIR}/${COLOR_SCHEME} ${CACHE_DIR}/colors
}

write_x
write_sh
write_css

xrdb "${HOME}/.Xresources"

update_terminals
update_nvim
update_bar
update_wm
